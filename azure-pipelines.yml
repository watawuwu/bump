strategy:
  matrix:
    musl:
      target: 'x86_64-unknown-linux-musl'
      imageName: 'ubuntu-16.04'
    gnu:
      target: 'x86_64-unknown-linux-gnu'
      imageName: 'ubuntu-16.04'
    mac:
      target: 'x86_64-apple-darwin'
      imageName: 'macos-10.13'
    windows:
      target: 'x86_64-pc-windows-msvc'
      imageName: 'vs2017-win2016'
pool:
  vmImage: $(imageName)
variables:
  RUSTUP_TOOLCHAIN: stable
steps:
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      rustup.exe update
      rustup.exe show
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Windows install rust
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      rustup update
      rustup show
      apt update && apt install -y musl-dev musl-tools && apt-get clean && rm -rf /var/lib/apt/lists/*
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
    displayName: Install rust
  - script: make deps
    displayName: Install build dependencies
  - script: |
      set -eou
      D=$(mktemp -d)
      git clone https://github.com/rust-embedded/cross.git "$D"
      cd "$D"
      curl -O -L "https://gist.githubusercontent.com/nickbabcock/c7bdc8e5974ed9956abf46ffd7dc13ff/raw/e211bc17ea88e505003ad763fac7060b4ac1d8d0/patch"
      git apply patch
      cargo install --path .
      rm -rf "$D"
    displayName: Install cross
  - script: make fmt-check test TARGET=$TARGET
    displayName: Test
  - script: make release-build TARGET=$TARGET
    displayName: Build
